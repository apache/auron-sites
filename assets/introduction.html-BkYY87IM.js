import{_ as t,c as r,e as s,o as a}from"./app-7Yi8rA2S.js";const i="/assets/auron_architecture-CvR3Mmhk.webp",o="/assets/auron_native_engine-lzt9j0Hy.webp",n="/assets/kwai-BjpT5fpn.png",l="/assets/didiglobal-BkhWJUJS.webp",c="/assets/bilibili-r1MGcKUK.png",d="/assets/xiecheng-xMZiNb9J.png",p="/assets/car-CEYkJ7m-.png",u="/assets/58com-CsRk-JV9.png",h="/assets/jjworld-Cq5ylN19.png",g="/assets/tcl-BUfrhuL0.png",m="/assets/yy-gOj6xATD.png",v="/assets/dmall-DavxXvfl.png",b="/assets/intsig-BacVTgZY.png",f="/assets/wanfang-BlNmV_wM.png",k="/assets/brd-CJlsnbo_.png",x="/assets/huaxia-hmObAaKc.png",_="/assets/ssc-UBFvxYR2.png",y="/assets/hair-_5iahdXm.png",w="/assets/dazhen-XpJjASw4.jpg",S="/assets/lbxdyf-CrdEyJ9o.jpg",N={};function A(J,e){return a(),r("div",null,[...e[0]||(e[0]=[s('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The <a href="https://github.com/apache/auron" target="_blank" rel="noopener noreferrer">Auron</a> accelerator for Apache Spark leverages native vectorized execution to accelerate query processing. It combines the power of the Apache Arrow-DataFusion library and the scale of the Spark distributed computing framework.</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><h3 id="problem-statement" tabindex="-1"><a class="header-anchor" href="#problem-statement"><span>Problem Statement</span></a></h3><p>Apache Spark is a popular distributed computing framework for handling large-scale data processing tasks. However, as the data size increases, traditional row-based processing can lead to significant CPU latencies and become a performance bottleneck. To overcome this challenge, vectorized execution technology has been introduced as an optimization method for Spark.</p><h3 id="auron-s-solution" tabindex="-1"><a class="header-anchor" href="#auron-s-solution"><span>Auronâ€™s Solution</span></a></h3><p>Vectorized execution technology operates by processing data in batches rather than rows, reducing function calls and improving computation performance with SIMD instructions. Auron leverages this technology by integrating the Apache Arrow-DataFusion library with the Spark framework.</p><p>Auron checks and translates supported operators in the Spark&#39;s physical plan and generates an equivalent native execution plan, then it passes the generated execution plan to the underlying native engine through JNI calls. The native engine executes the plan with DataFusion framework, which benefits from vectorized execution and has better performance comparing to Spark&#39;s JVM based execution.</p><h3 id="target-user" tabindex="-1"><a class="header-anchor" href="#target-user"><span>Target User</span></a></h3><p>Auron&#39;s target users are those who want to accelerate Spark SQL/DataFrame queries. Users can install Auron as a Spark client extension. After installing, most SQL queries should run faster without modifying, and save cluster resources.</p><h2 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture"><span>Architecture</span></a></h2><p>The architecture design of Auron is as follows. Auron takes a fully optimized physical plan from Spark, mapping it into equivalent execution plan implemented in native engine, and executes in Spark distributed environment.</p><p><img src="'+i+'" alt="Spark+Auron architecture"></p><p>Auron is composed of the following high-level components:</p><ul><li><strong>Spark Extension</strong>: hooks the whole accelerator into Spark execution lifetime.</li><li><strong>Spark Shims</strong>: specialized codes for different versions of spark.</li><li><strong>Native Engine</strong>: implements the native engine in rust, including: <ul><li>ExecutionPlan protobuf specification.</li><li>JNI gateway.</li><li>Customized operators, expressions, functions with DataFusion framework</li><li>Other common mods like memory management, fallback framework, HDFS-integrating, etc.</li></ul></li></ul><p>The architecture diagram of the <strong>native engine</strong> is as follows:</p><p><img src="'+o+'" alt="Auron Native Engine"></p><h3 id="currently-supported-native-operators-expressions" tabindex="-1"><a class="header-anchor" href="#currently-supported-native-operators-expressions"><span>Currently Supported Native Operators/Expressions</span></a></h3><p>All supported operators in Auron are listed below. Auron does support fallbacking an operator to spark execution which has not been implemented, so SQLs containing unsupported operators can still be executed successfully. However, fallbacks takes extra costs, too many fallbacks will slow down the execution.</p><p>Most spark builtin expressions are supported in Auron (by translating to DataFusion-physical-exprs). Auron also supports expression-level fallbacking, which can fallback a single unsupported expression to spark execution. so SQLs containing some unsupported expressions like UDF/UDTFs can still be optimized.</p><table class="my-table3"><tbody><tr><th>Native Operator</th><th>Note</th></tr><tr><td>NativeParquetScan</td><td></td></tr><tr><td>NativeParquetInsert</td><td>Some versions of Spark have not been tested. This parameter is disabled by default.</td></tr><tr><td>NativeOrcScan</td><td>The feature is not fully developed and does not support stripe clipping.</td></tr><tr><td>NativeShuffleExchange</td><td></td></tr><tr><td>NativeBroadcastExchange</td><td></td></tr><tr><td>NativeProject</td><td></td></tr><tr><td>NativeFilter</td><td></td></tr><tr><td>NativeSort</td><td></td></tr><tr><td>NativeLocalLimit</td><td></td></tr><tr><td>NativeGlobalLimit</td><td></td></tr><tr><td>NativeTakeOrdered</td><td></td></tr><tr><td>NativeUnion</td><td></td></tr><tr><td>NativeWindow</td><td rowspan="2">Only the default range [unboundedPreceding, currentRow] is supported.</td></tr><tr><td>NativeWindowGroupLimit</td></tr><tr><td>NativeExpand</td><td></td></tr><tr><td>NativeGenerate</td><td>Supports user-specified table function (UDTF)</td></tr><tr><td>NativeHashAggregate</td><td rowspan="2">Supports user-specified aggregate function (UDAF)</td></tr><tr><td>NativeSortAggregate</td></tr><tr><td>NativeBroadcastJoin</td><td rowspan="4">Non-equi joins are not supported at the moment.</td></tr><tr><td>NativeShuffledHashJoin</td></tr><tr><td>NativeSortMergeJoin</td></tr><tr><td>NativeBroadcastNestedLoopJoin</td></tr></tbody></table><h2 id="join-the-community" tabindex="-1"><a class="header-anchor" href="#join-the-community"><span>Join the Community</span></a></h2><h3 id="source-code" tabindex="-1"><a class="header-anchor" href="#source-code"><span>Source Code</span></a></h3><p>Please see <a href="https://github.com/apache/auron" target="_blank" rel="noopener noreferrer">Auron source code</a> for more information.</p><h3 id="cooperators" tabindex="-1"><a class="header-anchor" href="#cooperators"><span>Cooperators</span></a></h3><p>Auron currently has some users and contributors:</p><div class="partners-container"><div class="partners"><div class="partner-logo"><img src="'+n+'"></div><div class="partner-logo"><img src="'+l+'"></div><div class="partner-logo"><img src="'+c+'"></div><div class="partner-logo"><img src="'+d+'"></div><div class="partner-logo"><img src="'+p+'"></div><div class="partner-logo"><img src="'+u+'"></div><div class="partner-logo"><img src="'+h+'"></div><div class="partner-logo"><img src="'+g+'"></div><div class="partner-logo"><img src="'+m+'"></div><div class="partner-logo"><img src="'+v+'"></div><div class="partner-logo"><img src="'+b+'"></div><div class="partner-logo"><img src="'+f+'"></div><div class="partner-logo"><img src="'+k+'"></div><div class="partner-logo"><img src="'+x+'"></div><div class="partner-logo"><img src="'+_+'"></div><div class="partner-logo"><img src="'+y+'"></div><div class="partner-logo"><img src="'+w+'"></div><div class="partner-logo"><img src="'+S+'"></div></div></div><h3 id="subscribe-mailing-lists" tabindex="-1"><a class="header-anchor" href="#subscribe-mailing-lists"><span>Subscribe Mailing Lists</span></a></h3><p>Mail List is the most recognized form of communication in the Apache community. Contact us through the following mailing list.</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Scope</th><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="mailto:dev@auron.apache.org" target="_blank" rel="noopener noreferrer">dev@auron.apache.org</a></td><td style="text-align:left;">Development-related discussions</td><td style="text-align:left;"><a href="mailto:dev-subscribe@auron.apache.org" target="_blank" rel="noopener noreferrer">Subscribe</a></td><td style="text-align:left;"><a href="mailto:dev-unsubscribe@auron.apache.org" target="_blank" rel="noopener noreferrer">Unsubscribe</a></td></tr></tbody></table><h3 id="report-issues-or-submit-pull-request" tabindex="-1"><a class="header-anchor" href="#report-issues-or-submit-pull-request"><span>Report Issues or Submit Pull Request</span></a></h3><p>If you meet any questions, connect us and fix it by submitting a ðŸ”—<a href="https://github.com/apache/auron/pulls" target="_blank" rel="noopener noreferrer">Pull Request</a>.</p>',32)])])}const C=t(N,[["render",A]]),D=JSON.parse('{"path":"/introduction.html","title":"Introduction","lang":"en-US","frontmatter":{"title":"Introduction"},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[{"level":3,"title":"Problem Statement","slug":"problem-statement","link":"#problem-statement","children":[]},{"level":3,"title":"Auronâ€™s Solution","slug":"auron-s-solution","link":"#auron-s-solution","children":[]},{"level":3,"title":"Target User","slug":"target-user","link":"#target-user","children":[]}]},{"level":2,"title":"Architecture","slug":"architecture","link":"#architecture","children":[{"level":3,"title":"Currently Supported Native Operators/Expressions","slug":"currently-supported-native-operators-expressions","link":"#currently-supported-native-operators-expressions","children":[]}]},{"level":2,"title":"Join the Community","slug":"join-the-community","link":"#join-the-community","children":[{"level":3,"title":"Source Code","slug":"source-code","link":"#source-code","children":[]},{"level":3,"title":"Cooperators","slug":"cooperators","link":"#cooperators","children":[]},{"level":3,"title":"Subscribe Mailing Lists","slug":"subscribe-mailing-lists","link":"#subscribe-mailing-lists","children":[]},{"level":3,"title":"Report Issues or Submit Pull Request","slug":"report-issues-or-submit-pull-request","link":"#report-issues-or-submit-pull-request","children":[]}]}],"git":{},"filePathRelative":"introduction.md"}');export{C as comp,D as data};
